---
- include_vars: main.yml

- name: set hostname
  hostname:
    name: prime.maballou.com
    use: systemd

- name: set local DNS server and search domain using systemd-resolved
  lineinfile:
    path: /etc/systemd/resolved.conf
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  with_items:
    - { regexp: '^#?DNS=.*', line: 'DNS=192.168.0.250' }
    - { regexp: '^#?Domains=.*', line: 'Domains=maballou.com' }
  notify: restart systemd-resolved

- name: enable third-party repositories
  dnf:
    name: fedora-workstation-repositories
    state: latest

- name: enable third-party repositories
  lineinfile: 
    path: "{{ item }}"
    create: false # so raise error if not already installed
    regexp: enabled=
    line: enabled=1
    firstmatch: yes
  with_items:
    - /etc/yum.repos.d/google-chrome.repo
    - /etc/yum.repos.d/rpmfusion-nonfree-nvidia-driver.repo
    - /etc/yum.repos.d/rpmfusion-nonfree-steam.repo

- name: update packages
  dnf:
    name: '*'
    state: latest

- name: install nVidia drivers
  dnf:
    name:
      - akmod-nvidia
    state: present

- name: install multiple packages
  dnf:
    name:
      - brasero
      - cifs-utils
      - easytag
      - gnucash
      - google-chrome-stable
      - gparted
      - keepass
      - libdbi-dbd-sqlite
      - nfs-utils
      - python3-libsemanage
      - simple-scan
      - snapd
      - steam
      - vim
    state: latest

# Enable classic snap support for Visual Studio Code snap
- name: enable classic snap support for Visual Studio Code snap
  file:
    src: /var/lib/snapd/snap
    dest: /snap
    owner: root
    group: root
    state: link

# Install Visual Studio Code using snap with classic confinement
# - name: install Visual Studio Code snap with option --classic
#   snap:
#     name: code
#     classic: yes

# Install Slack

# Set Slack to start on login

# Install Discord

# Set Discord to start on login

- name: add existing user mike to group libvirt
  user:
    name: mike
    groups: libvirt
    append: yes

- name: install pip packages
  pip:
    name:
      - piecash

- name: fix a bug in piecash
  lineinfile:
      path: /usr/local/lib/python3.9/site-packages/piecash/core/session.py
      state: present
      regexp: "^.*'Gnucash': 300000.*"
      line: "        'Gnucash': 3000001,"
      backup: yes

- name: fix a bug in piecash
  lineinfile:
      path: /usr/local/lib/python3.9/site-packages/piecash/core/session.py
      state: present
      regexp: "^.*'splits':.*"
      line: "        'splits': 5,"
      backup: yes

- name: set selinux cups_execmem 
  seboolean:
    name: cups_execmem
    state: yes
    persistent: yes

- name: set selinux use_nfs_home_dirs
  seboolean:
    name: use_nfs_home_dirs
    state: yes
    persistent: yes

- name: set selinux virt_use_nfs
  seboolean:
    name: virt_use_nfs
    state: yes
    persistent: yes

- name: enabled networkmanager-wait-online.service
  systemd:
    name: NetworkManager-wait-online.service 
    enabled: yes

- name: start SSSD after network-online
  lineinfile:
    path: /lib/systemd/system/sssd.service
    line: 'After=network-online.target'
    insertbefore: Before=.*

- name: systemd automount files
  template: 
    src: "{{ item }}" 
    dest: /etc/systemd/system/{{ item | basename | regex_replace('\.j2','') }}
    owner: root
    group: root
    mode: '0644'
  with_fileglob:
      - templates/mnt-*.j2

- name: start mnt-mike automount
  systemd:
    name: mnt-mike.mount
    enabled: yes
    state: started

- name: start mnt-share automount
  systemd:
    name: mnt-share.mount
    enabled: yes
    state: started

- name: enable sshd
  systemd:
    name: sshd
    enabled: yes
    state: started
...
