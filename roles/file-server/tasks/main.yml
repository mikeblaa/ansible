---
- include_vars: main.yml

# Update all packages
- name: update packages
  dnf:
    name: '*'
    state: latest

# Install NFS and CIFS packages
- name: install nfs-utils, cifs, and samba
  dnf:
    name:
      - nfs-utils
      - cifs-utils
      - samba

# Gather facts on disk configuration
# TODO

# Create LVM volume groups
- name: create LVM volume groups
  lvg:
    vg: data
    pvs: /dev/sdb,/dev/sdc,/dev/sdd

# Create LVM logical volumes
- name: create nfs-home logical volume
  lvol:
    lv: nfs-home
    vg: data
    size: 192G
    opts: --type raid0 --stripes 3

- name: create cifs-home logical volume
  lvol:
    lv: cifs-home
    vg: data
    size: 64G
    opts: --type raid0 --stripes 3

- name: create cifs-share logical volume
  lvol:
    lv: cifs-share
    vg: data
    size: 1024G
    opts: --type raid0 --stripes 3

# Create filesystems
- name: create filesystem on nfs-home
  filesystem:
    fstype: xfs
    dev: /dev/mapper/data-nfs--home

- name: create filesystem on cifs-home
  filesystem:
    fstype: xfs
    dev: /dev/mapper/data-cifs--home

- name: create filesystem on cifs-share
  filesystem:
    fstype: xfs
    dev: /dev/mapper/data-cifs--share

# Create mountpoints and set ownership
- name: create nfs-home
  file:
    path: /srv/nfs-home
    state: directory
    mode: u=rwx,g=rx,o=rx
    owner: root
    group: root
    seuser: system_u
    serole: object_r

- name: create cifs-home
  file:
    path: /srv/cifs-home
    state: directory
    mode: u=rwx,g=rx,o=rx
    owner: root
    group: root
    seuser: system_u
    serole: object_r
    setype: samba_share_t

- name: create cifs-share
  file:
    path: /srv/cifs-share
    state: directory
    mode: u=rwx,g=rwx,o=rx
    owner: root
    group: users
    seuser: system_u
    serole: object_r
    setype: samba_share_t

# Mount LVM volumes
- name: mount nfs-home
  mount:
    path: /srv/nfs-home
    src: /dev/mapper/data-nfs--home
    fstype: xfs
    opts: defaults
    state: present

- name: mount cifs-home
  mount:
    path: /srv/cifs-home
    src: /dev/mapper/data-cifs--home
    fstype: xfs
    opts: defaults
    state: present

- name: mount cifs-share
  mount:
    path: /srv/cifs-share
    src: /dev/mapper/data-cifs--share
    fstype: xfs
    opts: defaults
    state: present

# Configure /etc/exports
- name: configure /etc/exports
  copy: 
    src: files/exports
    dest: /etc/exports
    owner: root
    group: root
    seuser: system_u
    serole: object_r
    setype: exports_t
    mode: '0644'

# Configure /etc/samba/smb.conf
- name: configure /etc/samba/smb.conf
  copy: 
    src: files/smb.conf
    dest: /etc/samba/smb.conf
    owner: root
    group: root
    seuser: system_u
    serole: object_r
    setype: samba_etc_t
    mode: '0644'

# Add user to samba, echo twice to confirm password
- name: Add user to samba
  shell: "(echo {{ cifs_password }}; echo {{ cifs_password }}) | smbpasswd -s -a {{ cifs_username }}"

# Add backup job to daily cron
- name: add backup job to daily cron
  copy:
    src: files/backup
    dest: /etc/cron.daily/backup
    owner: root
    group: root
    mode: '0755'

# update firewall
- name: update firewalld to add nfs
  firewalld:
    service: nfs
    permanent: yes
    state: enabled
    immediate: yes

- name: update firewalld to add samba
  firewalld:
    service: samba
    permanent: yes
    state: enabled
    immediate: yes

# update SELinux permissions
- name: set selinux samba_export_all_rw
  ansible.posix.seboolean:
    name: samba_export_all_rw
    state: yes
    persistent: yes

- name: set selinux fcontext of samba_share_t
  community.general.sefcontext:
    target: '{{ item.target }}(/.*)?'
    setype: "{{ item.setype }}"
    state: present
  register: filecontext
  with_items:
  - { target: '/srv/cifs-home', setype: 'samba_share_t' }
  - { target: '/srv/cifs-share', setype: 'samba_share_t' }

- name: run restore context to reload selinux
  shell: restorecon -R -v /var/lib/{{ item.target }}
  when: filecontext.results[item.index]|changed
  with_items:
  - { index: 0, target: '/srv/cifs-home' }
  - { index: 1, target: '/srv/cifs-share' }

# restart services
- name: restart nfs-server
  systemd:
    name: nfs-server
    enabled: yes
    state: restarted

- name: restart samba
  systemd:
    name: smb
    enabled: yes
    state: restarted
...
